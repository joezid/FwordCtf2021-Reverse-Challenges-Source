import z3
import string
import itertools

charset = string.lowercase+string.uppercase+string.digits
charset= [ord(i)for i in charset]
s = z3.Solver()
input_length=96
a1 = [z3.BitVec("x{}".format(i), 8) for i in range(input_length)]
flag_full = z3.Concat(*a1)
for i in range(input_length):
    s.add(a1[i]<127)
    s.add(a1[i]>20)
par="FWORDctf{"
for i in range(len(par)):
    s.add(a1[i]==ord(par[i]))
s.add(a1[33] + (a1[3] ^ (a1[49] ^ a1[78] ^ a1[0])) - a1[49] - a1[26] == 28)
s.add((a1[44] | (a1[69] ^ (a1[43] + a1[21] + (a1[42] & a1[58] & a1[1])))) == 0xF7)
s.add((a1[26] ^ (a1[45] + (a1[64] ^ a1[13] & a1[2]))) - a1[34] - a1[70] == 0xCA)
s.add((a1[76] & (a1[71] + a1[80] + (a1[82] & (a1[40] | (a1[3] - a1[41]))))) == 49)
s.add((a1[30] ^ (a1[14] | ((a1[85] ^ a1[20] ^ a1[35] ^ a1[4]) - a1[64]))) == 0xA3)
s.add(a1[70] + a1[55] + (a1[60] ^ (a1[65] + (a1[32] ^ a1[22] ^ a1[5]))) == 94)
s.add(a1[18] ^ (a1[19] ^ a1[62] ^ a1[74] ^ a1[12] & (a1[6] - a1[6]))==0)
s.add((a1[3] ^ (a1[81] ^ a1[37] ^ a1[48] ^ (a1[38] + (a1[52] ^ a1[7])))) == 0xCF)
s.add((a1[49] | ((a1[82] & a1[26] & (a1[78] ^ a1[8])) - a1[91])) - a1[53] == 0xA0)
s.add(a1[55] + (a1[90] ^ ((a1[63] & (a1[15] ^ a1[9])) - a1[3])) - a1[88] == 0xC7)
s.add((a1[13] | (a1[78] + (a1[84] ^ (a1[72] + (a1[24] ^ (a1[33] | a1[10])))))) == 95)
s.add((a1[5] | (a1[4] & ((a1[78] ^ a1[11]) - a1[71] - a1[41]))) == 99)
s.add((a1[91] ^ (a1[89] & (a1[92] ^ (a1[1] + (a1[71] & a1[12]) - a1[66])))) == 1)
s.add(a1[22] + (a1[32] ^ (a1[21] + a1[38] + (a1[16] ^ a1[13]))) - a1[59] == 13)
s.add((a1[90] | (a1[76] ^ (a1[20] + a1[14] - a1[0]))) - a1[40] - a1[72] == 0xC8)
s.add((a1[76] ^ (a1[76] & (a1[60] + a1[8] + a1[15] - a1[84] - a1[23]))) == 32)
s.add((a1[12] & (a1[90] & (a1[39] ^ a1[82] ^ a1[8] & (a1[5] | a1[16])))) == 32)
s.add((a1[36] ^ (a1[79] | a1[63] | (a1[70] + a1[30] + (a1[43] | a1[17])))) == 57)
s.add((a1[2] ^ (a1[19] | a1[36] ^ (a1[83] | (a1[18] - a1[87])))) - a1[80] == 0xB7)
s.add((a1[64] ^ (a1[6] ^ a1[20] ^ (a1[82] + (a1[10] ^ (a1[19] - a1[63]))))) == 0xAE)
s.add((a1[91] ^ (a1[80] + (a1[13] | a1[39] | a1[71] ^ (a1[57] | a1[20])))) == 0xC9)
s.add((a1[86] ^ (a1[85] ^ a1[86] & (a1[72] ^ (a1[71] + (a1[54] ^ a1[21]))))) == 93)
s.add((a1[57] ^ (a1[19] ^ a1[65] ^ a1[14] ^ (a1[22] - a1[58]))) - a1[38] == 94)
s.add((a1[21] ^ (a1[6] ^ ((a1[26] ^ a1[72] & (a1[73] ^ a1[23])) - a1[1]))) == 0xF4)
s.add((a1[29] & (a1[69] & (a1[36] ^ (a1[52] + (a1[16] & (a1[24] - a1[76])))))) == 4)
s.add((a1[10] | (a1[12] | ((a1[55] & (a1[38] ^ (a1[42] + a1[25]))) - a1[80]))) == 0xFE)
s.add(a1[24] + (a1[47] & ((a1[16] & (a1[20] + (a1[71] & a1[26]))) - a1[47])) == 0x83)
s.add((a1[88] & (a1[20] | a1[91] ^ a1[76] & a1[80] & a1[27])) - a1[13] == 0xF5)
s.add(a1[12] + (a1[4] & (a1[7] ^ (a1[79] | a1[1] & (a1[89] ^ a1[28])))) == 116)
s.add((a1[95] ^ (a1[32] ^ a1[22] ^ (a1[68] + (a1[58] ^ a1[29]) - a1[54]))) == 76)
s.add((a1[69] ^ (a1[59] ^ a1[26] & (a1[40] | a1[44] ^ a1[41] ^ a1[30]))) == 19)
s.add((a1[50] ^ (a1[28] + (a1[16] & a1[24] & a1[31]) - a1[36] - a1[86])) == 0xC0)
s.add((a1[50] ^ (a1[37] ^ a1[69] ^ a1[54] ^ a1[36] ^ (a1[32] - a1[33]))) == 0x9B)
s.add((a1[56] ^ (a1[12] & (a1[52] ^ (a1[94] + a1[45] + a1[22] + a1[33])))) == 46)
s.add((a1[19] ^ (a1[89] + (a1[6] ^ a1[34]) - a1[23] - a1[20] - a1[42])) == 107)
s.add((a1[10] | (a1[60] + (a1[33] | a1[72] | (a1[27] + (a1[91] ^ a1[35]))))) == 105)
s.add((a1[94] ^ (a1[3] & (a1[24] ^ a1[24] & a1[19] & (a1[42] ^ a1[36])))) == 42)
s.add((a1[17] ^ (a1[57] | a1[71] | ((a1[7] ^ (a1[88] | a1[37])) - a1[19]))) == 0x8E)
s.add((a1[56] ^ (a1[0] ^ a1[76] & (a1[71] ^ a1[76] ^ (a1[38] - a1[9])))) == 57)
s.add((a1[22] ^ (a1[8] ^ (a1[11] + a1[20] + (a1[4] ^ (a1[57] + a1[39]))))) == 12)
s.add(a1[91] + (a1[77] | (a1[85] + (a1[38] ^ (a1[67] + a1[40])) - a1[78])) == 47)
s.add(a1[84] + (a1[86] ^ (a1[85] ^ a1[51] & (a1[11] ^ (a1[78] | a1[41])))) == 0x92)
s.add((a1[12] ^ (a1[31] ^ (a1[90] + (a1[27] ^ a1[0] ^ a1[42]) - a1[65]))) == 0xE3)
s.add((a1[75] ^ (a1[71] ^ (a1[64] + (a1[63] ^ a1[40] & (a1[2] ^ a1[43]))))) == 33)
s.add((a1[93] ^ (a1[27] ^ (a1[35] | a1[81] ^ (a1[44] - a1[9])))) - a1[76] == 9)
s.add((a1[88] | (a1[61] & a1[85] & (a1[78] ^ a1[71] & (a1[30] | a1[45])))) == 127)
s.add((a1[24] ^ (a1[41] ^ a1[21] ^ a1[76] ^ ((a1[89] & a1[46]) - a1[90]))) == 66)
s.add((a1[86] ^ (a1[28] + (a1[61] ^ a1[36] ^ a1[47]) - a1[18])) - a1[68] == 0xFC)
s.add((a1[95] ^ (a1[24] + (a1[8] | a1[46] ^ a1[61] ^ (a1[23] | a1[48])))) == 0xA7)
s.add(a1[19] + (a1[25] | (a1[95] + (a1[32] ^ a1[67] ^ a1[49]))) - a1[42] == 0xF6)
s.add((a1[67] ^ ((a1[90] ^ a1[85] ^ a1[19] ^ a1[50]) - a1[36] - a1[46])) == 97)
s.add((a1[29] ^ (a1[39] ^ a1[4] & ((a1[60] ^ (a1[59] + a1[51])) - a1[56]))) == 67)
s.add(a1[91] & (a1[36] & (a1[91] + (a1[10] ^ a1[69] ^ (a1[23] + a1[52]))))==0)
s.add((a1[88] ^ (a1[28] & (a1[19] ^ a1[45] & (a1[52] + (a1[81] ^ a1[53]))))) == 31)
s.add((a1[62] ^ (a1[57] ^ (a1[27] + (a1[44] | ((a1[82] & a1[54]) - a1[60]))))) == 0xB7)
s.add((a1[69] & (a1[12] ^ (a1[10] + (a1[11] ^ a1[81] ^ a1[55]) - a1[17]))) == 94)
s.add(a1[88] + (a1[51] ^ ((a1[53] ^ a1[19] ^ a1[93] ^ a1[56]) - a1[36])) == 57)
s.add((a1[61] | (a1[69] | a1[16] ^ (a1[13] + (a1[11] ^ a1[18] ^ a1[57])))) == 0xFF)
s.add((a1[89] | (a1[60] ^ a1[39] ^ a1[67] ^ a1[58])) == 122)
s.add(a1[10] + (a1[40] ^ (a1[69] ^ a1[4] & (a1[59] - a1[86] - a1[46]))) == 108)
s.add((a1[40] & (a1[68] | a1[18] ^ ((a1[76] ^ a1[84] ^ a1[60]) - a1[66]))) == 95)
s.add((a1[54] & (a1[53] ^ a1[82] ^ (a1[56] + (a1[81] ^ (a1[61] - a1[87]))))) == 66)
s.add((a1[56] ^ ((a1[67] ^ ((a1[41] ^ a1[62]) - a1[42])) - a1[3])) - a1[44] == 120)
s.add((a1[14] ^ (a1[55] | a1[30] ^ (a1[90] | a1[23] | a1[53] ^ a1[63]))) == 11)
s.add((a1[60] & (a1[59] ^ a1[44] ^ a1[46] ^ (a1[71] | a1[29] & a1[64]))) == 34)
s.add((a1[85] | ((a1[43] ^ a1[58] & a1[88] & a1[65]) - a1[49] - a1[73])) == 0xB5)
s.add(a1[12] + a1[88] + (a1[40] ^ (a1[18] ^ (a1[16] + a1[66] - a1[89]))) == 0xAD)
s.add((a1[59] ^ (a1[90] & ((a1[30] ^ a1[9] ^ a1[3] ^ a1[67]) - a1[48]))) == 127)
s.add((a1[50] & (a1[0] | a1[51] ^ a1[11] ^ a1[36] ^ a1[4] ^ a1[68])) == 86)
s.add((a1[73] ^ (a1[0] ^ ((a1[4] ^ a1[81] ^ a1[55] ^ a1[69]) - a1[19]))) == 0xB3)
s.add((a1[48] ^ (a1[81] ^ a1[12] ^ a1[63] & (a1[15] | a1[37] ^ a1[70]))) == 116)
s.add((a1[51] ^ (a1[57] ^ ((a1[6] ^ a1[77] ^ a1[87] ^ a1[71]) - a1[80]))) == 0x9A)
s.add((a1[12] & (a1[76] ^ a1[57] ^ a1[93] ^ a1[89] & a1[72])) - a1[92] == 6)
s.add((a1[49] ^ (a1[87] + (a1[6] ^ a1[65] ^ a1[94] ^ a1[73]) - a1[56])) == 0xC8)
s.add((a1[10] ^ (a1[35] + (a1[12] | a1[60] ^ a1[74]) - a1[58])) - a1[80] == 72)
s.add((a1[49] ^ (a1[68] ^ (a1[94] + (a1[71] ^ (a1[37] + a1[75] - a1[50]))))) == 0xA0)
s.add((a1[66] ^ ((a1[53] | a1[65] ^ a1[15] & (a1[83] + a1[76])) - a1[15])) == 44)
s.add((a1[18] ^ (a1[91] & (a1[30] ^ a1[8] ^ a1[30] ^ (a1[56] + a1[77])))) == 101)
s.add(a1[45] + (a1[55] ^ (a1[46] ^ ((a1[58] ^ (a1[79] | a1[78])) - a1[46]))) == 0xE0)
s.add((a1[86] ^ (a1[31] ^ a1[94] ^ a1[24] & (a1[23] | a1[93] | a1[79]))) == 4)
s.add((a1[21] & (a1[7] ^ a1[46] ^ a1[63] & (a1[67] | (a1[80] - a1[55])))) == 64)
s.add((a1[1] | (a1[48] ^ a1[53] ^ a1[44] ^ a1[20] ^ a1[30] & a1[81])) == 119)
s.add((a1[25] | (a1[1] + (a1[23] ^ a1[70] ^ a1[82]) - a1[51] - a1[14])) == 119)
s.add((a1[37] ^ (a1[22] ^ (a1[58] | a1[5] | a1[60] ^ (a1[39] | a1[83])))) == 2)
s.add((a1[51] ^ (a1[51] & ((a1[91] | a1[74] ^ (a1[9] | a1[84])) - a1[6]))) == 42)
s.add((a1[81] ^ (a1[2] ^ a1[19] ^ a1[62] & (a1[47] + (a1[71] ^ a1[85])))) == 20)
s.add((a1[72] ^ (a1[33] & (a1[94] ^ a1[58] ^ a1[70] ^ (a1[84] + a1[86])))) == 2)
s.add((a1[44] | (a1[80] & (a1[88] ^ (a1[20] | a1[36] ^ a1[44] & a1[87])))) == 125)
s.add((a1[81] ^ (a1[38] ^ a1[94] ^ a1[25] & (a1[50] ^ (a1[88] - a1[0])))) == 56)
s.add((a1[3] | (a1[84] | a1[93] ^ (a1[11] | a1[66] & (a1[63] ^ a1[89])))) == 115)
s.add((a1[52] & (a1[13] ^ a1[85] & (a1[16] + (a1[95] ^ (a1[67] | a1[90]))))) == 32)
s.add((a1[44] ^ (a1[68] ^ a1[78] ^ (a1[74] + (a1[80] ^ (a1[51] + a1[91]))))) == 78)
s.add((a1[18] ^ (a1[15] ^ (a1[33] | a1[30] & (a1[87] ^ (a1[92] - a1[59]))))) == 104)
s.add((a1[67] & (a1[39] ^ (a1[76] + (a1[58] ^ a1[15] ^ a1[93]) - a1[6]))) == 4)
s.add((a1[65] & (a1[77] & (a1[66] ^ (a1[0] | a1[72] ^ a1[80] ^ a1[94])))) == 116)
s.add((a1[83] ^ (a1[55] | ((a1[7] ^ a1[70] & (a1[8] ^ a1[95])) - a1[28]))) == 0xA0)
s.add(a1[79]==0x5f)
s.add(a1[47]==52)
s.add(a1[61]==117)
if s.check() == z3.sat:
    m = s.model()
    solution = ''.join([chr(m[i].as_long()) for i in a1])
    print(solution)
